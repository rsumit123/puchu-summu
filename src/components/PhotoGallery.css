/* 1) Fullscreen parent: centers the heart on larger screens */
.header {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

/* 2) Heart container:
   - Uses 90vw (capped at 600px) and maintains a square aspect ratio.
   - Has a beating animation.
*/
#heart {
  position: relative;
  width: 90vw;         /* fills most of the viewport width */
  max-width: 600px;    /* caps the width on larger screens */
  aspect-ratio: 1/1;   /* forces a square shape */
  animation: beat 1.5s ease-in-out infinite;
}

/* Beating animation */
@keyframes beat {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.08);
  }
}

/* 3) The SVG that draws the red heart background.
   It fills the entire heart container.
*/
.heart-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

/* 4) Photo container:
   - Absolutely positioned to fill the heart.
   - Clipped using the same clipPath.
*/
.photo-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  clip-path: url(#heartClip);
  -webkit-clip-path: url(#heartClip);
  display: flex;
  justify-content: center;
  align-items: center;
  pointer-events: none;
}

/* 5) Photo item:
   - Nearly fills the container with a 5px margin (for a visible red border).
   - Uses a dropIn animation when a new photo appears.
*/
.photo-item {
  width: calc(100% - 10px);
  height: calc(100% - 10px);
  margin: 5px;
  opacity: 0;
  animation: dropIn 1s ease-out forwards;
}

/* DropIn animation: photo falls in from above */
@keyframes dropIn {
  0% {
    transform: translateY(-150%);
    opacity: 0;
  }
  80% {
    transform: translateY(10px);
    opacity: 1;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

/* 6) The image inside the photo item:
   - Fills the container using object-fit: cover.
   - Is centered by default.
*/
.photo-item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: 50% 50%;
  border: 2px solid white;
  border-radius: 4px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

/* Hover effect (desktop) */
.photo-item:hover img {
  transform: scale(1.15);
  z-index: 3;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
}

/* 7) Responsive tweaks for smaller screens:
   - Adjust header alignment and heart container size to reduce excessive gap.
   - Reduce header height to 70vh to avoid taking up too much vertical space on mobile.
*/
@media (max-width: 500px) {
  .header {
    height: 70vh;          /* reduced from 100vh */
    align-items: flex-start; /* align to top */
    padding-top: 10px;       /* add a small top padding */
  }
  
  #heart {
    width: 90vw;
    height: 90vw;            /* force a larger square to fill more width and reduce extra vertical gap */
    max-width: none;
  }
}
